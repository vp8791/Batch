<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
	http://www.springframework.org/schema/beans/spring-beans.xsd 	
    http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/batch 
    http://www.springframework.org/schema/batch/spring-batch.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd 			
    http://www.springframework.org/schema/jdbc 
	http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task.xsd">

	<bean id="report" class="com.mkyong.model.Report"
		scope="prototype" />

	<batch:job id="reportJob">
		<batch:step id="step1">
			<batch:tasklet>
				<batch:chunk reader="cvsFileItemReader"
					processor="jobProcessor" writer="myoracleItemWriter"
					commit-interval="#{jobParameters[commitSize]}">
				</batch:chunk>
			</batch:tasklet>
		</batch:step>
	</batch:job>


	<bean id="inputFile"
		class="org.springframework.core.io.FileSystemResource" scope="step">
		<constructor-arg
			value="#{jobParameters[processingFile]}" />
	</bean>


	<bean id="cvsFileItemReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<!-- Read a csv file -->
		<property name="resource" ref="inputFile" />
		<property name="lineMapper">
			<bean
				class="org.springframework.batch.item.file.mapping.DefaultLineMapper">

				<!-- split it -->
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="date,impressions,clicks,earning" />
					</bean>
				</property>

				<property name="fieldSetMapper">

					<!-- return back to reader, rather than a mapped object. -->
					<!-- <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" 
						/> -->

					<!-- map to an object -->
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="report" />
					</bean>

				</property>

			</bean>
		</property>

	</bean>

	<bean id="myoracleItemWriter"
		class="org.springframework.batch.item.database.JdbcBatchItemWriter">
		<property name="dataSource" ref="dataSource" />
		<property name="sql">
			<value>
            <![CDATA[        
            	insert into RAW_REPORT(REPORT_DATE,IMPRESSIONS,CLICKS,EARNING, JOB_ID, JOB_START_TIME, PROCESSING_FILE, ACQUIRER, CHUNK_COMMIT_SIZE  ) values
            	 (:date, :impressions, :clicks, :earning, :jobId, :loadedDate, :processingFile, :acquirer, :commitSize)
            ]]>
			</value>
		</property>
		<!-- It will take care matching between object property and sql name parameter -->
		<property name="itemSqlParameterSourceProvider">
			<bean
				class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
		</property>
	</bean>


	<task:scheduled-tasks>
		<task:scheduled ref="jobScheduler"
			method="runDeceptiveDomainsJob" fixed-delay="${scheduled.delay}" />
	</task:scheduled-tasks>


</beans>
